{"version":3,"sources":["HomeComponent.js","SingleProject.js","ProjectsComponent.js","CovidApi.js","NoMatchPage.js","App.js","serviceWorker.js","index.js"],"names":["HomeComponent","Container","Row","Col","lg","span","offset","href","rel","target","class","download","Button","variant","size","className","Component","SingleProject","value","this","props","detailList","details","map","item","Fragment","title","link","ProjectsComponents","state","projectData","listItems","document","CovidApi","style","marginTop","App","basename","process","Navbar","bg","fixed","Brand","Nav","Link","exact","path","component","ProjectsComponent","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.38f3cd08.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button'\n\n\nclass HomeComponent extends Component {\n  render() {\n    return (\n      <div>\n        <Container>\n          <Row>\n            <Col lg={{ span: 6, offset: 3 }}>\n              <h1>Hi, I'm <b>Salil Jain</b></h1>\n              <h5>\n                I'm a Software Engineer and next month I'll be joining <a href=\"https://www.oracle.com/\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"oracle-link\">Oracle</a> as a Member of Technical Staff.{' '}\n                {/* <br/> */}\n                I love making useful applications from the technologies I learn. \n                <br/>\n                Previously I have interned at <a href=\"https://www.nvidia.com\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"nvidia-link\">NVIDIA</a>, <a href=\"https://www.crunchbase.com/organization/cryptokart\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"cryptokart-link\">Cryptokart</a> and <a href=\"https://www.homingos.com/\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"homingos-link\">Homingos</a>.\n              </h5>\n            </Col>\n          </Row>\n        </Container>\n        <div class=\"contact-div\">\n          <a href={process.env.PUBLIC_URL + '/Salil_CV.pdf'} download>  \n            <Button variant=\"primary\" size=\"lg\" className=\"justify-content-md-center resume-button\">\n              Download Resume\n            </Button>\n          </a>\n          <hr className=\"hr-center\"/>\n          <h4><i>Get in touch!</i></h4>\n          <a href=\"https://www.linkedin.com/in/saliljain1/\" rel=\"noopener noreferrer\" target=\"_blank\">Linkedin</a>{' '}|{' '}\n          <a href=\"https://github.com/Salil-Jain\" rel=\"noopener noreferrer\" target=\"_blank\">GitHub</a>{' '}|{' '}\n          <a href=\"https://twitter.com/salil__jain/\" rel=\"noopener noreferrer\" target=\"_blank\">Twitter</a>{' '}|{' '}\n          <a href=\"mailto:j.salil36@gmail.com\" rel=\"noopener noreferrer\" target=\"_blank\">Email</a>\n        </div>\n      </div>\n    )\n  }\n}\nexport default HomeComponent;","import React, { Component } from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\nclass SingleProject extends Component {\n    render() {\n        const value = this.props.value;\n        const detailList = value.details.map((item) => {\n            return <li>{item}</li>\n        })\n        return (\n            <React.Fragment>\n                <Row>\n                    <Col lg={{ span: 6, offset: 3 }}>\n                        <h3>{value.title} (<a href={value.link[1]}>{value.link[0]}</a>)</h3>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col lg={{ span: 6, offset: 3 }}>\n                        <ul>\n                            {detailList}\n                        </ul>\n                    </Col>\n                </Row>\n            </React.Fragment>\n        )\n    }\n}\nexport default SingleProject;","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport SingleProject from './SingleProject';\n\n\n\nclass ProjectsComponents extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            projectData: [\n                {\n                    title: \"Covid-19 cases India API\",\n                    link: [\"Documentation\", \"/covid-india-api\"],\n                    details: [\n                        \"Developed API returning Covid cases in India data from MOHFW website\",\n                        \"The API received an average 20k hits per month\"\n                    ]\n                },\n                {\n                    title: \"Memescraper\",\n                    link: [\"GitHub\", \"https://github.com/Salil-Jain/memescraper\"],\n                    details: [\n                        \"Scraping program to download memes from any subreddit\",\n                        \"The script uses python and regex to identify the link and download memes\"\n                    ]\n                },\n                {\n                    title: \"Google Summer of Code - 2018\",\n                    link: [\"Question Tool\", \"https://github.com/berkmancenter/question_tool\"],\n                    details: [\n                        \"Implemented modifications to upvotes and the edit permissions for admins and moderators.\",\n                        \"Worked on improvements to mobile UI/UX\",\n                        \"Performed bug fixes and code refactoring\"\n                    ]\n                },\n                {\n                    title: \"Dukkaan.com\",\n                    link: [\"Finnovatica - 2017\", \"https://finnovatica.com/Home.aspx\"],\n                    details: [\n                        \"Developed a robust online platform for the sale of goods by hyperlocal showrooms\",\n                        \"Project aimed at removing the trust issue between the seller and the consumer, facilitating the growth of local showrooms\"\n                    ]\n                },\n                {\n                    title: \"DilSeDeal\",\n                    link: [\"Sophomores\", \"https://www.facebook.com/TeamSophoS/\"],\n                    details: [\n                        \"Architected a website, devoted to selling second-hand products within colleges, as the sole front-end developer\",\n                        \"Virtually coordinated and remotely designed through GitHub with fellow partner\"\n                    ]\n                }\n            ]\n        }\n    }\n    render() {\n        const { projectData } = this.state;\n        var listItems = projectData.map((item) => {\n            return <SingleProject value={item} />;\n        })\n        return (\n            <Container>\n                <Row>\n                    <Col lg={{ span: 6, offset: 3 }}>\n                        <h1>Projects</h1>\n                        <hr/>\n                    </Col>\n                </Row>\n                <React.Fragment>{listItems}</React.Fragment>\n            </Container>\n        )\n    }\n    componentDidMount() {\n        document.title = \"Projects | Salil Jain\";\n    }\n}\nexport default ProjectsComponents;","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nclass CovidApi extends Component {\n  render() {\n    return (\n      <Container>\n        <Row style={{marginTop: \"10px\"}}>\n          <Col lg={{ span: 6, offset: 3 }}>\n            <h1>Covid-19 cases India API</h1>\n          </Col>\n        </Row>\n        <Row style={{marginTop: \"10px\"}}>\n          <Col lg={{ span: 6, offset: 3 }}>\n            <a href=\"https://www.linkedin.com/in/vivek-khanna-02637815b/\" rel=\"noopener noreferrer\" target=\"_blank\">Vivek Khanna</a> and I have created APIs to return count of Covid-19 cases in India. The source of our API is <b>Ministry of Health and Family Welfare</b> (<a href=\"https://www.mohfw.gov.in/\" rel=\"noopener noreferrer\" target=\"_blank\">MOHFW</a>).\n            The APIs are public and can be used by anyone to create dashboard or for research purposes.\n            We have created 2 APIs:\n          </Col>\n        </Row>\n        <Row style={{marginTop: \"10px\"}}>\n          <Col lg={{ span: 6, offset: 3 }}>\n            <h3>Statewise Data</h3>\n            This API returns the statewise data of total number of cases, total number of casualties and total number of cured patients.\n            <br />\n            Endpoint: <a href=\"http://covid-india-cases.herokuapp.com/states/\" rel=\"noopener noreferrer\" target=\"_blank\">http://covid-india-cases.herokuapp.com/states/</a>\n          </Col>\n        </Row>\n        <Row style={{marginTop: \"10px\"}}>\n          <Col lg={{ span: 6, offset: 3 }}>\n            <h3>State Data Timeline</h3>\n            This API returns the timeline data of total number of covid cases statewise\n            <br />\n            Endpoint: <a href=\"https://covid-india-cases.herokuapp.com/statetimeline/\" rel=\"noopener noreferrer\" target=\"_blank\">https://covid-india-cases.herokuapp.com/statetimeline/</a>\n          </Col>\n        </Row>\n\n        <Row style={{marginTop: \"10px\"}}>\n          <Col lg={{ span: 6, offset: 3 }}>\n          If you need any kind of help/support from our side or have any suggestions please reach out to us at <a href=\"mailto:j.salil36@gmail.com\">j.salil36@gmail.com</a> or <a href=\"mailto:vivekkhanna987@gmail.com\">vivekkhanna987@gmail.com</a>\n          </Col>\n        </Row>\n        <Row style={{marginTop: \"10px\"}}>\n          <Col lg={{ span: 6, offset: 3 }}>\n            <h5>Stay Home, Stay Safe</h5>\n          </Col>\n        </Row>\n        \n      </Container>\n\n    )\n  }\n  componentDidMount() {\n    document.title = \"Covid cases India API\";\n  }\n}\nexport default CovidApi;","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button'\n\nclass NoMatchPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            freeMoney: false\n        };\n        this.activatefreeMoney = this.activatefreeMoney.bind(this);\n    }\n\n    activatefreeMoney() {\n        console.log('here');\n        this.setState({\n            freeMoney: true\n        })\n    }\n\n    render() {\n      const { freeMoney } = this.state;\n      return (\n        <Container>\n        <Row>\n          <Col lg={{ span: 6, offset: 3 }} style={{textAlign: \"center\"}}>\n            <h1 style={{fontSize: \"4em\"}}>404<br />Page Not Found</h1>\n            <a href=\"/\">\n                <Button variant=\"primary\" size=\"lg\" className=\"justify-content-md-center resume-button\" style={{margin: \"10px\"}}>\n                Home\n                </Button>\n            </a>\n            <Button variant=\"primary\" size=\"lg\" className=\"justify-content-md-center resume-button\" onClick={this.activatefreeMoney} style={{margin: \"10px\"}}>\n              Get Free Money\n            </Button>\n          </Col>\n        </Row>\n        { freeMoney &&\n        <Row>\n            <Col lg={{ span: 6, offset: 3 }} style={{textAlign: \"center\", marginTop: \"50px\"}}>\n                <img src=\"https://i.kym-cdn.com/photos/images/original/000/112/643/meme-president-astley.jpg\" alt=\"free-money\" width=\"100%\"/>\n            </Col>\n        </Row>\n        }\n      </Container>\n      )\n    }\n    componentDidMount() {\n        document.title = \"Page Not Found | Salil Jain\";\n    }\n}\nexport default NoMatchPage;","import React from 'react';\n// import logo from './logo.svg';\nimport HomeComponent from './HomeComponent';\nimport ProjectsComponent from './ProjectsComponent';\nimport CovidApi from './CovidApi';\nimport NoMatchPage from './NoMatchPage';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Navbar, Nav } from 'react-bootstrap';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router basename={`${process.env.PUBLIC_URL}/`}>\n      <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\">\n        <Navbar.Brand href=\"/\">Salil Jain</Navbar.Brand>\n        <Nav className=\"ml-auto \">\n          <Nav.Link href=\"/projects\">Projects</Nav.Link>\n        </Nav>\n      </Navbar>\n\n      <Switch>\n        <Route exact path=\"/\" component={HomeComponent} />\n        <Route path=\"/projects\" component={ProjectsComponent} />\n        <Route path=\"/covid-india-api\" component={CovidApi} />\n        {/* <Route component={NoMatchPage} /> */}\n      </Switch>\n      <div className=\"footer-div\">\n        Footer Content!\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}